// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb/demo.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type HeartbeatRequest struct {
	RequestId            string   `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HeartbeatRequest) Reset()         { *m = HeartbeatRequest{} }
func (m *HeartbeatRequest) String() string { return proto.CompactTextString(m) }
func (*HeartbeatRequest) ProtoMessage()    {}
func (*HeartbeatRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_65d71fe0140170a2, []int{0}
}

func (m *HeartbeatRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HeartbeatRequest.Unmarshal(m, b)
}
func (m *HeartbeatRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HeartbeatRequest.Marshal(b, m, deterministic)
}
func (m *HeartbeatRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HeartbeatRequest.Merge(m, src)
}
func (m *HeartbeatRequest) XXX_Size() int {
	return xxx_messageInfo_HeartbeatRequest.Size(m)
}
func (m *HeartbeatRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HeartbeatRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HeartbeatRequest proto.InternalMessageInfo

func (m *HeartbeatRequest) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

type Heartbeat struct {
	Note                 string   `protobuf:"bytes,1,opt,name=note,proto3" json:"note,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Heartbeat) Reset()         { *m = Heartbeat{} }
func (m *Heartbeat) String() string { return proto.CompactTextString(m) }
func (*Heartbeat) ProtoMessage()    {}
func (*Heartbeat) Descriptor() ([]byte, []int) {
	return fileDescriptor_65d71fe0140170a2, []int{1}
}

func (m *Heartbeat) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Heartbeat.Unmarshal(m, b)
}
func (m *Heartbeat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Heartbeat.Marshal(b, m, deterministic)
}
func (m *Heartbeat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Heartbeat.Merge(m, src)
}
func (m *Heartbeat) XXX_Size() int {
	return xxx_messageInfo_Heartbeat.Size(m)
}
func (m *Heartbeat) XXX_DiscardUnknown() {
	xxx_messageInfo_Heartbeat.DiscardUnknown(m)
}

var xxx_messageInfo_Heartbeat proto.InternalMessageInfo

func (m *Heartbeat) GetNote() string {
	if m != nil {
		return m.Note
	}
	return ""
}

func init() {
	proto.RegisterType((*HeartbeatRequest)(nil), "pb.HeartbeatRequest")
	proto.RegisterType((*Heartbeat)(nil), "pb.Heartbeat")
}

func init() { proto.RegisterFile("pb/demo.proto", fileDescriptor_65d71fe0140170a2) }

var fileDescriptor_65d71fe0140170a2 = []byte{
	// 199 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x8f, 0x31, 0x4b, 0xc7, 0x30,
	0x10, 0x47, 0xad, 0x88, 0xd0, 0x93, 0x3f, 0x4a, 0x70, 0x10, 0x41, 0x94, 0x4e, 0x2e, 0x26, 0x5a,
	0x9d, 0x1c, 0xc5, 0xc1, 0x82, 0x53, 0xdd, 0x5c, 0x24, 0xd7, 0x9c, 0x31, 0x43, 0x72, 0x31, 0xb9,
	0x8a, 0x1f, 0x5f, 0xa8, 0x45, 0xd1, 0xed, 0xf1, 0xb8, 0xc7, 0xf1, 0x83, 0x4d, 0x46, 0xe3, 0x28,
	0xb2, 0xce, 0x85, 0x85, 0xd5, 0x76, 0xc6, 0xee, 0x0a, 0x0e, 0x1e, 0xc8, 0x16, 0x41, 0xb2, 0x32,
	0xd2, 0xfb, 0x4c, 0x55, 0xd4, 0x09, 0x40, 0xf9, 0xc6, 0x97, 0xe0, 0x8e, 0x9a, 0xb3, 0xe6, 0xbc,
	0x1d, 0xdb, 0xd5, 0x0c, 0xae, 0x3b, 0x85, 0xf6, 0x27, 0x51, 0x0a, 0x76, 0x12, 0x0b, 0xad, 0x57,
	0x0b, 0xf7, 0x03, 0xec, 0xdd, 0x53, 0xe4, 0x27, 0x2a, 0x1f, 0x61, 0x22, 0x75, 0x0b, 0xfb, 0x8f,
	0xa1, 0x0a, 0xa5, 0xdf, 0xea, 0x50, 0x67, 0xd4, 0xff, 0xff, 0x1e, 0x6f, 0xfe, 0xd8, 0x6e, 0xeb,
	0xb2, 0xb9, 0xbb, 0x79, 0xee, 0x7d, 0x90, 0xb7, 0x19, 0xf5, 0xc4, 0xd1, 0x90, 0x9f, 0xab, 0xd8,
	0xd7, 0xca, 0xc9, 0x54, 0x9b, 0x1c, 0xf2, 0xa7, 0xf1, 0x6c, 0x7c, 0xc9, 0xd3, 0x45, 0x95, 0x42,
	0x36, 0x86, 0xe4, 0x4d, 0x46, 0xdc, 0x5d, 0xf6, 0x5d, 0x7f, 0x05, 0x00, 0x00, 0xff, 0xff, 0x47,
	0x26, 0x70, 0x16, 0xf0, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DemoServiceClient is the client API for DemoService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DemoServiceClient interface {
	ListenHeartbeat(ctx context.Context, in *HeartbeatRequest, opts ...grpc.CallOption) (DemoService_ListenHeartbeatClient, error)
}

type demoServiceClient struct {
	cc *grpc.ClientConn
}

func NewDemoServiceClient(cc *grpc.ClientConn) DemoServiceClient {
	return &demoServiceClient{cc}
}

func (c *demoServiceClient) ListenHeartbeat(ctx context.Context, in *HeartbeatRequest, opts ...grpc.CallOption) (DemoService_ListenHeartbeatClient, error) {
	stream, err := c.cc.NewStream(ctx, &_DemoService_serviceDesc.Streams[0], "/pb.DemoService/ListenHeartbeat", opts...)
	if err != nil {
		return nil, err
	}
	x := &demoServiceListenHeartbeatClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type DemoService_ListenHeartbeatClient interface {
	Recv() (*Heartbeat, error)
	grpc.ClientStream
}

type demoServiceListenHeartbeatClient struct {
	grpc.ClientStream
}

func (x *demoServiceListenHeartbeatClient) Recv() (*Heartbeat, error) {
	m := new(Heartbeat)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// DemoServiceServer is the server API for DemoService service.
type DemoServiceServer interface {
	ListenHeartbeat(*HeartbeatRequest, DemoService_ListenHeartbeatServer) error
}

// UnimplementedDemoServiceServer can be embedded to have forward compatible implementations.
type UnimplementedDemoServiceServer struct {
}

func (*UnimplementedDemoServiceServer) ListenHeartbeat(req *HeartbeatRequest, srv DemoService_ListenHeartbeatServer) error {
	return status.Errorf(codes.Unimplemented, "method ListenHeartbeat not implemented")
}

func RegisterDemoServiceServer(s *grpc.Server, srv DemoServiceServer) {
	s.RegisterService(&_DemoService_serviceDesc, srv)
}

func _DemoService_ListenHeartbeat_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(HeartbeatRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(DemoServiceServer).ListenHeartbeat(m, &demoServiceListenHeartbeatServer{stream})
}

type DemoService_ListenHeartbeatServer interface {
	Send(*Heartbeat) error
	grpc.ServerStream
}

type demoServiceListenHeartbeatServer struct {
	grpc.ServerStream
}

func (x *demoServiceListenHeartbeatServer) Send(m *Heartbeat) error {
	return x.ServerStream.SendMsg(m)
}

var _DemoService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.DemoService",
	HandlerType: (*DemoServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ListenHeartbeat",
			Handler:       _DemoService_ListenHeartbeat_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "pb/demo.proto",
}
